defmodule Lor.Repo.Migrations.CreateLolTables do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:s3_objects, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :bucket, :text, null: false
      add :key, :text, null: false
      add :file_name, :text, null: false
      add :content_type, :text, null: false
      add :metadata, :map
      add :url, :text
      add :size, :bigint, null: false
      add :md5, :text
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end

    create table(:lol_summoners, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :platform_id, :text, null: false
      add :riot_id, :text, null: false
      add :account_id, :text, null: false
      add :encrypted_id, :text, null: false
      add :puuid, :text, null: false
      add :profile_icon_id, :bigint, null: false
      add :revision_date, :bigint, null: false
      add :name, :text, null: false
      add :summoner_level, :bigint, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end

    create unique_index(:lol_summoners, [:account_id], name: "lol_summoners_account_id_index")

    create unique_index(:lol_summoners, [:encrypted_id], name: "lol_summoners_encrypted_id_index")

    create unique_index(:lol_summoners, [:puuid], name: "lol_summoners_puuid_index")

    create unique_index(:lol_summoners, [:riot_id], name: "lol_summoners_riot_id_index")

    create table(:lol_participants, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :team_id, :bigint, null: false
      add :kills, :bigint, null: false
      add :deaths, :bigint, null: false
      add :assists, :bigint, null: false
      add :champion_id, :bigint, null: false
      add :gold_earned, :bigint, null: false
      add :summoners, {:array, :bigint}, null: false
      add :items, {:array, :bigint}, null: false
      add :team_position, :text
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :match_id, :uuid, null: false
      add :summoner_id, :uuid, null: false
      add :opponent_participant_id, :uuid
    end

    create table(:lol_matches, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
    end

    alter table(:lol_participants) do
      modify :match_id,
             references(:lol_matches,
               column: :id,
               name: "lol_participants_match_id_fkey",
               type: :uuid,
               prefix: "public"
             )

      modify :summoner_id,
             references(:lol_summoners,
               column: :id,
               name: "lol_participants_summoner_id_fkey",
               type: :uuid,
               prefix: "public"
             )

      modify :opponent_participant_id,
             references(:lol_participants,
               column: :id,
               name: "lol_participants_opponent_participant_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:lol_matches) do
      add :data_version, :text, null: false
      add :match_id, :text, null: false
      add :participant_puuids, {:array, :text}, null: false
      add :game_creation, :bigint, null: false
      add :game_duration, :bigint, null: false
      add :game_start_timestamp, :bigint, null: false
      add :game_end_timestamp, :bigint, null: false
      add :game_id, :bigint, null: false
      add :game_mode, :text, null: false
      add :game_name, :text, null: false
      add :game_type, :text, null: false
      add :game_version, :text, null: false
      add :map_id, :bigint, null: false
      add :queue_id, :bigint, null: false
      add :platform_id, :text, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :original_data_id,
          references(:s3_objects,
            column: :id,
            name: "lol_matches_original_data_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end

    create unique_index(:lol_matches, [:game_id], name: "lol_matches_game_id_index")

    create unique_index(:lol_matches, [:match_id], name: "lol_matches_match_id_index")
  end

  def down do
    drop_if_exists unique_index(:lol_matches, [:match_id], name: "lol_matches_match_id_index")

    drop_if_exists unique_index(:lol_matches, [:game_id], name: "lol_matches_game_id_index")

    drop constraint(:lol_matches, "lol_matches_original_data_id_fkey")

    alter table(:lol_matches) do
      remove :original_data_id
      remove :updated_at
      remove :inserted_at
      remove :platform_id
      remove :queue_id
      remove :map_id
      remove :game_version
      remove :game_type
      remove :game_name
      remove :game_mode
      remove :game_id
      remove :game_end_timestamp
      remove :game_start_timestamp
      remove :game_duration
      remove :game_creation
      remove :participant_puuids
      remove :match_id
      remove :data_version
    end

    drop constraint(:lol_participants, "lol_participants_match_id_fkey")

    drop constraint(:lol_participants, "lol_participants_summoner_id_fkey")

    drop constraint(:lol_participants, "lol_participants_opponent_participant_id_fkey")

    alter table(:lol_participants) do
      modify :opponent_participant_id, :uuid
      modify :summoner_id, :uuid
      modify :match_id, :uuid
    end

    drop table(:lol_matches)

    drop table(:lol_participants)

    drop_if_exists unique_index(:lol_summoners, [:riot_id], name: "lol_summoners_riot_id_index")

    drop_if_exists unique_index(:lol_summoners, [:puuid], name: "lol_summoners_puuid_index")

    drop_if_exists unique_index(:lol_summoners, [:encrypted_id],
                     name: "lol_summoners_encrypted_id_index"
                   )

    drop_if_exists unique_index(:lol_summoners, [:account_id],
                     name: "lol_summoners_account_id_index"
                   )

    drop table(:lol_summoners)

    drop table(:s3_objects)
  end
end
