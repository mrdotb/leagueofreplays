<div class={[
  "border-l-8 border border-gray-200 w-full bg-white text-gray-800 rounded-lg overflow-hidden dark:bg-gray-800 dark:text-gray-300 dark:border-gray-700",
  if(true,
    do: "border-l-blue-400 dark:border-l-blue-400",
    else: "border-l-red-400 dark:border-l-red-400"
  )
]}>
  <.pro_participant participant={@participant} click={JS.toggle(to: "#tabs-#{@participant.id}")} />

  <div id={"tabs-#{@participant.id}"} style="display: none">
    <PC.tabs
      role="tablist"
      underline
      class="justify-center border-y border-gray-200 dark:border-gray-700"
    >
      <PC.tab
        id={"replay-#{@participant.id}"}
        role="tab"
        aria-selected={if(@state == "replay", do: "true", else: "false")}
        aria-controls={"tabpanel-replay-#{@participant.id}"}
        tabindex={if(@state == "replay", do: "1", else: "2")}
        is_active={@state == "replay"}
        phx-click={show_replay(@participant.id)}
        phx-target={@myself}
        underline
      >
        <.icon name="hero-play" class="w-5 h-5 mr-2" /> Replay
      </PC.tab>
      <PC.tab
        id={"post-game-#{@participant.id}"}
        role="tab"
        aria-selected={if(@state == "post-game", do: "true", else: "false")}
        aria-controls={"tabpanel-post-game-#{@participant.id}"}
        tabindex={if(@state == "post-game", do: "1", else: "2")}
        is_active={@state == "post-game"}
        phx-click={show_post_game(@participant.id)}
        phx-target={@myself}
        underline
      >
        <.icon name="hero-circle-stack" class="w-5 h-5 mr-2" /> Post game
      </PC.tab>
    </PC.tabs>

    <div id={"tabpanel-replay-#{@participant.id}"} role="tabpanel" aria-labelledby="Replay">
      <div class="py-4 flex justify-center">
        <PC.button phx-click="show-modal" phx-target={@myself}>
          Spectate
        </PC.button>
      </div>
    </div>

    <div
      id={"tabpanel-post-game-#{@participant.id}"}
      role="tabpanel"
      aria-labelledby="Post Game"
      class="hidden"
    >
      <.async_result :let={match} assign={@match}>
        <:loading>
          <div class="py-2 flex justify-center items-center">
            <PC.spinner size="lg" />
          </div>
        </:loading>

        <:failed :let={_reason}>Loading error</:failed>

        <.post_match match={match} />
      </.async_result>
    </div>
  </div>

  <.live_component
    :if={@show_modal?}
    module={LorWeb.SpectateModalComponent}
    id={@participant.id}
    participant={@participant}
    close_modal_target={@myself}
  />
</div>
