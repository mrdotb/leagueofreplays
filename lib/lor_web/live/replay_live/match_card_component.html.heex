<div class={[
  "border-l-8 border border-gray-200 w-full bg-white text-gray-800 rounded-lg overflow-hidden dark:bg-gray-800 dark:text-gray-300 dark:border-gray-700",
  if(true,
    do: "border-l-blue-400 dark:border-l-blue-400",
    else: "border-l-red-400 dark:border-l-red-400"
  )
]}>
  <div
    role="button"
    tabIndex="0"
    phx-click={JS.push("load-match") |> JS.toggle(to: "#match-participant-#{@participant.id}")}
    phx-target={@myself}
    class="grid-participants px-1 py-2 w-full hover:bg-gray-50 dark:hover:bg-gray-900"
  >
    <div class="[grid-area:creation] flex items-center justify-center ">
      <.time_ago id={@participant.id} datetime={@participant.match.game_start} />
    </div>

    <LOLC.player
      class="[grid-area:player]"
      src={@participant.summoner.player.picture.url}
      name={@participant.summoner.player.official_name}
    />

    <LOLC.versus
      class="[grid-area:versus]"
      game_version="12.12.1"
      champion_key={@participant.champion_id}
      opponent_champion_key={@participant.opponent_participant.champion_id}
    />

    <LOLC.kda
      class="[grid-area:kda]"
      kills={@participant.kills}
      deaths={@participant.deaths}
      assists={@participant.assists}
    />

    <LOLC.summoners
      class="[grid-area:summoners]"
      game_version="12.12.1"
      summoners={@participant.summoners}
    />

    <LOLC.build
      class="[grid-area:build] md:hidden lg:flex"
      game_version="12.12.1"
      items={@participant.items}
    />

    <div class="[grid-area:ellipsis] hidden lg:flex items-center">
      <.icon name="hero-ellipsis-horizontal" class="w-6 h-6" />
    </div>
  </div>
  <div id={"match-participant-#{@participant.id}"} style="display: none">
    <.async_result :let={match} assign={@match}>
      <:loading>
        <div class="py-2 flex justify-center items-center">
          <PC.spinner size="lg" />
        </div>
      </:loading>

      <:failed :let={_reason}>Loading error</:failed>

      <div :if={match}>
        <%= for {participant, index} <- Enum.with_index(match.participants, 1) do %>
          <div :if={index in [1, 6]} class="grid-team-participants-header px-1 py-1">
            <div class="[grid-area:side] flex space-x-1">
              <div class="text-red-400">Victory</div>
              <span :if={index == 1}>Blue side</span>
              <span :if={index == 6}>Red side</span>
            </div>
            <div class="[grid-area:summoners]">Summoners</div>
            <div class="[grid-area:kda] text-center">KDA</div>
            <div class="[grid-area:gold] text-center">Gold earned</div>
            <div class="[grid-area:build] text-center">Build</div>
          </div>

          <div class="grid-team-participants px-1 py-1">
            <div class="[grid-area:summoner-champion] flex items-center space-x-1">
              <LOLC.champion game_version="12.12.1" champion_key={participant.champion_id} />
              <.link :if={participant.summoner.player} class="hover:underline">
                <%= participant.summoner.player.official_name %>
              </.link>
              <span :if={is_nil(participant.summoner.player_id)}>
                <%= participant.summoner.name %>
              </span>
            </div>

            <LOLC.summoners
              class="[grid-area:summoners]"
              game_version="12.12.1"
              summoners={participant.summoners}
            />

            <LOLC.kda
              class="[grid-area:kda]"
              kills={participant.kills}
              deaths={participant.deaths}
              assists={participant.assists}
            />

            <div class="[grid-area:gold] text-center">
              <span class="text-yellow-600 dark:text-yellow-400">
                <%= participant.gold_earned %>
              </span>
            </div>

            <LOLC.build
              class="[grid-area:build]"
              game_version="12.12.1"
              items={participant.items}
            />
          </div>
        <% end %>
      </div>
    </.async_result>
  </div>
</div>
